<--------------------------USER TABLE START-------------------------->

CREATE TABLE  `icanc`.`user` (
`id` INT( 11 ) NOT NULL AUTO_INCREMENT ,
 `email` VARCHAR( 50 ) NOT NULL ,
 `nickname` VARCHAR( 20 ) NOT NULL ,
 `job` INT( 11 ) NOT NULL ,
 `dateOfBirth` VARCHAR( 10 ) NOT NULL ,
 `password` VARCHAR( 255 ) NOT NULL ,
 `created` DATETIME NOT NULL ,
PRIMARY KEY (  `id` ) ,
UNIQUE KEY  `email_idx` (  `email` )
) ENGINE = INNODB DEFAULT CHARSET = utf8;

<--------------------------USER TABLE END-------------------------->








<--------------------------REFERENCE TABLE START--------------------------> 

CREATE TABLE  `icanc`.`reference` (
    `srl` INT( 11 ) NOT NULL AUTO_INCREMENT ,
    `name` VARCHAR( 30 ) CHARACTER SET utf8 NOT NULL ,
    `code` TEXT CHARACTER SET utf8 NOT NULL ,
    `header` VARCHAR( 255 ) CHARACTER SET utf8 NOT NULL ,
    `form` VARCHAR( 255 ) CHARACTER SET utf8 NOT NULL ,
    `parameter` VARCHAR( 255 ) CHARACTER SET utf8 NOT NULL ,
    `return` VARCHAR( 255 ) CHARACTER SET utf8 NOT NULL ,
    `tip` TEXT CHARACTER SET utf8 NOT NULL ,
    PRIMARY KEY (  `srl` ) ,
    UNIQUE KEY  `name` (  `name` ) ,
    KEY  `srl` (  `srl` )
) ENGINE = INNODB DEFAULT CHARSET = latin1;

<--------------------------REFERENCE TABLE END-------------------------->








<--------------------------BOARD TABLE START--------------------------> 

CREATE TABLE  `icanc`.`board` (
`srl` INT( 11 ) NOT NULL AUTO_INCREMENT ,
 `title` VARCHAR( 255 ) NOT NULL ,
 `writer` VARCHAR( 50 ) NOT NULL ,
 `created_time` DATETIME NOT NULL ,
 `modified_time` DATETIME NOT NULL ,
 `hits` INT( 11 ) NOT NULL ,
 `is_deleted` TINYINT( 1 ) NOT NULL ,
 `is_blind` TINYINT( 1 ) NOT NULL ,
 `is_closed` TINYINT( 1 ) NOT NULL ,
 `is_notice` TINYINT( 1 ) NOT NULL ,
 `text` TEXT NOT NULL ,
 `goods` INT( 11 ) NOT NULL ,
 `board_name` INT( 11 ) NOT NULL ,
 `group_id` INT( 11 ) NOT NULL ,
 `reply_cnt` INT( 11 ) NOT NULL ,
 `reply_srl` INT( 11 ) NOT NULL ,
PRIMARY KEY (  `srl` )
) ENGINE = INNODB DEFAULT CHARSET = utf8;

<--------------------------BOARD TABLE END--------------------------> 









<--------------------------SESSION TABLE START--------------------------> 

CREATE TABLE  `icanc`.`ci_sessions` (
`session_id` VARCHAR( 40 ) NOT NULL DEFAULT  '0',
 `ip_address` VARCHAR( 16 ) NOT NULL DEFAULT  '0',
 `user_agent` VARCHAR( 120 ) NOT NULL ,
 `last_activity` INT( 10 ) UNSIGNED NOT NULL DEFAULT  '0',
 `user_data` TEXT NOT NULL ,
PRIMARY KEY (  `session_id` ) ,
KEY  `last_activity_idx` (  `last_activity` )
) ENGINE = INNODB DEFAULT CHARSET = utf8;

<---------------------SESSION TABLE END-------------------------->








<--------------------------CODING_QUIZ TABLE START-------------------------->

CREATE TABLE  `icanc`.`coding_quiz` (
`id` INT( 11 ) NOT NULL AUTO_INCREMENT COMMENT  '문제번호',
 `question` VARCHAR( 255 ) NOT NULL COMMENT  '문제',
 `answer` VARCHAR( 255 ) NOT NULL COMMENT  '정답',
 `head` TEXT NOT NULL COMMENT  '코드 상단',
 `tail` TEXT NOT NULL COMMENT  '코드 하단',
 `description` TEXT NOT NULL COMMENT  '정답 설명',
PRIMARY KEY (  `id` )
) ENGINE = INNODB DEFAULT CHARSET = utf8;

<--데이터값-->
ID = 1
QUESTION = 아래의 결과 값이 나오도록 코드를 완성하세요
ANSWER = a=10
HEAD = #include<stdio.h>

// 메인함수
int main()
{
    int a;
    a = 20;
TAIL =     printf("a=%d",a);  // 이 함수의 결과값은?
   
    return 0;
}
DESCRIPTION = 현재 a의 값은 20으로 할당되어있다.<br> 그렇기 때문에 a의 값을 10으로 할당해주는 코드가 필요하다.<br>따라서 'a=10;'이 정답이다.

<--------------------------CODING_QUIZ TABLE END--------------------------> 












<--------------------------CODING_CODE TABLE START--------------------------> 

CREATE TABLE  `icanc`.`coding_code` (
`id` INT( 11 ) NOT NULL AUTO_INCREMENT ,
 `threadCodeHead` TEXT NOT NULL ,
 `threadCodeTail` TEXT NOT NULL ,
 `mainCodeHead` TEXT NOT NULL ,
 `mainCodeTail` TEXT NOT NULL ,
PRIMARY KEY (  `id` )
) ENGINE = INNODB DEFAULT CHARSET = utf8;


<--데이터값-->

id =>1

threadCodeHead =>#include <pthread.h>
#include <unistd.h>
#include <stdlib.h>
#include <stdio.h>
void *runCode34567(void *id34567)
{

threadCodeTail =>}

void *checkTime34567(void *id34567)
{
    sleep(2);
    
    //pthread_cancel((pthread_t )id34567);
    pthread_kill((pthread_t)id34567, 9);
}

int main()
{
    pthread_t code34567,check34567;
    int thr_id34567;
    int status34567;
    int a34567 = 1;

    // 실제 사용자 코드 실행 쓰레드
    thr_id34567 = pthread_create(&check34567, NULL, checkTime34567,(void *)&check34567);
    
    if (thr_id34567 < 0)
    {
        perror("thread create error : ");
        exit(0);
    }

    // 사용자 코드가 10초 이상 진행시 KILL 쓰레드
    thr_id34567 = pthread_create(&code34567, NULL, runCode34567, (void *)&check34567);
    if (thr_id34567 < 0)
    {
        perror("thread create error : ");
        exit(1);
    }

    // 쓰레드 종료를 기다린다. 
    pthread_join(check34567, (void **)&status34567);
    
    return 0;
}

mainCodeHead =>// C언어의 가장 기본적인구조

#include<stdio.h>

int main()
{

mainCodeTail =>    return 0;
}

<--------------------------CODING_CODE TABLE END--------------------------> 






